stages:
  - release
  - build
  - UnitTests
  - CodeCoverage
  - PhpStan
  - Php-cs-fixer
  - Rector


variables:
  RELEASE_MAJOR: 1
  RELEASE_MINOR: 0
  RELEASE_PATCH: $CI_PIPELINE_IID
  RELEASE_VERSION: "v.$RELEASE_MAJOR.$RELEASE_MINOR.$RELEASE_PATCH"

build-job:   
  stage: build  
  script:
  - echo "Installing Symfony CLI..."
  - wget https://get.symfony.com/cli/installer -O - | bash
  - mv /root/.symfony5/bin/symfony /usr/local/bin/symfony
  - echo "Symfony CLI installed."

phpunit:
  image: php:8.0
  stage: UnitTests
  script:
    - php bin/phpunit --filter=testcomputeTVAFoodProduct2
    - php bin/phpunit --filter=testcomputeTVAFoodProduct
    - php bin/phpunit --filter=testcomputeOtherTVAFoodProduct

phpstan:
  image: php:8.0
  stage: PhpStan
  script:
    - php vendor/bin/phpstan analyse
  allow_failure: true

php_cs_fixer:
  image: php:8.0
  stage: Php-cs-fixer
  script:
    - php-cs-fixer fix --config=.php-cs-fixer.dist.php --diff --dry-run
  allow_failure: true

rector:
  stage: Rector
  image: php:8.0
  script:
    -  php vendor/bin/rector process --dry-run
  allow_failure: true

coverage-test-job:
  image : php:7.4-apache
  stage: CodeCoverage    
  script:
    - echo "Coverage Code analysis..."
    #Installer Xdebug : 
    # - pecl install xdebug
    # - docker-php-ext-enable xdebug
    # - php bin/phpunit --coverage-html public/test-coverage
    - echo "Coverage Code analysis is done !"

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never                                  
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH  
  script:
    - echo "running release_job for $TAG"
  release:                                        
    tag_name: "$RELEASE_VERSION"
    description: "$RELEASE_VERSION"
    ref: '$CI_COMMIT_SHA'

  artifacts:
    paths:
      - public/
  
cache:
  paths:
    - vendor/