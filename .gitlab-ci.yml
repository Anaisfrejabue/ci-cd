stages:          # List of stages for jobs, and their order of execution
  - build
  - UnitTests
  - SecurityChecker  
  - release
  - deploy
  - pages

variables:
  RELEASE_MAJOR: 1
  RELEASE_MINOR: 0
  RELEASE_PATCH: 0
  RELEASE_VERSION: "v.$RELEASE_MAJOR.$RELEASE_MINOR.$RELEASE_PATCH"

build-job:       
  stage: build
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."

phpunit:
  image: php:7.4-apache
  stage: UnitTests
  script:
    - php bin/phpunit --filter=testcomputeTVAFoodProduct2
    - php bin/phpunit --filter=testcomputeTVAFoodProduct
    - php bin/phpunit --filter=testcomputeOtherTVAFoodProduct

lint-test-job:
  image : jakzal/phpqa:php7.4
  stage: SecurityChecker    
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

deploy-job:
  stage: deploy  
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never                                  
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH  
  script:
    - echo "running release_job for $TAG"
  release:                                        
    tag_name: "$RELEASE_VERSION"
    description: "$RELEASE_VERSION"
    ref: '$CI_COMMIT_SHA'

pages:
  stage: pages
  script:
    - echo "Building and deploying GitLab Pages..."
    - cp -r public/* public/index.html .  # Copier le contenu des pages dans la racine du r√©pertoire du projet
    - git add .  # Ajouter le contenu des pages pour le commit
    - git commit -m "Add GitLab Pages content"  # Commit du contenu des pages
    - git push origin $CI_COMMIT_BRANCH  # Pousser le commit contenant les pages vers la branche
    - echo "GitLab Pages built and deployed successfully."
